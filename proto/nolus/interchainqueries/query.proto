syntax = "proto3";
package nolus.interchainqueries;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "nolus/interchainqueries/genesis.proto";
import "nolus/interchainqueries/params.proto";
import "nolus/interchainqueries/tx.proto";

option go_package = "github.com/Nolus-Protocol/nolus-core/x/interchainqueries/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/nolus/interchainqueries/params";
  }

  // RegisteredQueries queries the registered queries of the module.
  rpc RegisteredQueries(QueryRegisteredQueriesRequest) returns (QueryRegisteredQueriesResponse) {
    option (google.api.http).get = "/nolus/interchainqueries/registered_queries";
  }

  // RegisteredQuery queries the registered query of the module.
  rpc RegisteredQuery(QueryRegisteredQueryRequest) returns (QueryRegisteredQueryResponse) {
    option (google.api.http).get = "/nolus/interchainqueries/registered_query";
  }

  // QueryResult queries the result of a registered query.
  rpc QueryResult(QueryRegisteredQueryResultRequest) returns (QueryResultResponse) {
    option (google.api.http).get = "/nolus/interchainqueries/query_result";
  }

  // LastRemoteHeight queries the last remote height of a connection.
  rpc LastRemoteHeight(QueryLastRemoteHeight) returns (QueryLastRemoteHeightResponse) {
    option (google.api.http).get = "/nolus/interchainqueries/remote_height";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryRegisteredQueriesRequest is request type for the Query/RegisteredQueries RPC method.
message QueryRegisteredQueriesRequest {
  repeated string owners = 1;
  string connection_id = 2;
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryRegisteredQueriesResponse is response type for the Query/RegisteredQueries RPC method.
message QueryRegisteredQueriesResponse {
  repeated RegisteredQuery registered_queries = 1 [(gogoproto.nullable) = false];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryRegisteredQueryRequest is request type for the Query/RegisteredQuery RPC method.
message QueryRegisteredQueryRequest {
  uint64 query_id = 1;
}

// QueryRegisteredQueryResponse is response type for the Query/RegisteredQuery RPC method.
message QueryRegisteredQueryResponse {
  RegisteredQuery registered_query = 1;
}

// QueryRegisteredQueryResultRequest is request type for the Query/QueryResult RPC method.
message QueryRegisteredQueryResultRequest {
  uint64 query_id = 1;
}

// QueryResultResponse is response type for the Query/QueryResult RPC method.
message QueryResultResponse {
  QueryResult result = 1;
}

// Transaction defines a transaction message for the interchainqueries module.
message Transaction {
  uint64 id = 1;
  uint64 height = 2;
  bytes data = 3;
}

// QueryLastRemoteHeight is request type for the Query/LastRemoteHeight RPC method.
message QueryLastRemoteHeight {
  string connection_id = 1;
}

// QueryLastRemoteHeightResponse is response type for the Query/LastRemoteHeight RPC method.
message QueryLastRemoteHeightResponse {
  uint64 height = 1;
}
