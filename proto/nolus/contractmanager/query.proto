syntax = "proto3";
package nolus.contractmanager;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "nolus/contractmanager/failure.proto";
import "nolus/contractmanager/params.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/Nolus-Protocol/nolus-core/x/contractmanager/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/nolus/contractmanager/params";
  }

  // Queries a Failure by contract address and failure ID.
  rpc AddressFailure(QueryFailureRequest) returns (QueryAddressFailureResponse) {
    option (google.api.http).get = "/nolus/contractmanager/failures/{address}/{failure_id}";
  }

  // Queries Failures by contract address.
  rpc AddressFailures(QueryFailuresByAddressRequest) returns (QueryAddressFailuresResponse) {
    option (google.api.http).get = "/nolus/contractmanager/failures/{address}";
  }

  // Queries a list of Failures occurred on the network.
  rpc Failures(QueryFailuresRequest) returns (QueryFailuresResponse) {
    option (google.api.http).get = "/nolus/contractmanager/failures";
  }

  // this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryFailuresRequest is request type for the Query/Failures RPC method.
message QueryFailuresRequest {
   // address of the contract which Sudo call failed.
   string address = 1;
   cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryFailuresResponse is response type for the Query/Failures RPC method.
message QueryFailuresResponse {
  repeated Failure failures = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryFailureRequest is request type for the Query/Failures/{address}/{failure_id} RPC method.
message QueryFailureRequest {
   // address of the contract which Sudo call failed.
   string address = 1;
   // ID of the failure for the given contract.
   uint64 failure_id = 2;
   cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

// QueryAddressFailureResponse is response type for the Query/Failures/{failure_id} RPC method.
message QueryAddressFailureResponse {
  repeated Failure failures = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryFailuresByAddressRequest is request type for the Query/Failures/{address} RPC method.
message QueryFailuresByAddressRequest {
  // address of the contract which Sudo call failed.
  string address = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryAddressFailuresResponse is response type for the Query/Failures/{address} RPC method.
message QueryAddressFailuresResponse {
  repeated Failure failures = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
